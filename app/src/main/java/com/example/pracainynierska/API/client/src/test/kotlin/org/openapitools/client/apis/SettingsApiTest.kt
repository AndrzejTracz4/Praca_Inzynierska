/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.SettingsApi
import org.openapitools.client.models.ApiSettingsGetCollection200Response
import org.openapitools.client.models.SettingsSettingscreateSettingswrite
import org.openapitools.client.models.SettingsSettingsitemread
import org.openapitools.client.models.SettingsSettingsreadSettingsitemread
import org.openapitools.client.models.SettingsSettingswrite
import org.openapitools.client.models.SettingsjsonldSettingscreateSettingswrite
import org.openapitools.client.models.SettingsjsonldSettingsreadSettingsitemread

class SettingsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SettingsApi
        //val apiInstance = SettingsApi()

        // to test apiSettingsGetCollection
        should("test apiSettingsGetCollection") {
            // uncomment below to test apiSettingsGetCollection
            //val page : kotlin.Int = 56 // kotlin.Int | The collection page number
            //val result : kotlin.collections.List<SettingsSettingsitemread> = apiInstance.apiSettingsGetCollection(page)
            //result shouldBe ("TODO")
        }

        // to test apiSettingsIdDelete
        should("test apiSettingsIdDelete") {
            // uncomment below to test apiSettingsIdDelete
            //val id : kotlin.String = id_example // kotlin.String | Settings identifier
            //apiInstance.apiSettingsIdDelete(id)
        }

        // to test apiSettingsIdGet
        should("test apiSettingsIdGet") {
            // uncomment below to test apiSettingsIdGet
            //val id : kotlin.String = id_example // kotlin.String | Settings identifier
            //val result : SettingsSettingsreadSettingsitemread = apiInstance.apiSettingsIdGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiSettingsIdPatch
        should("test apiSettingsIdPatch") {
            // uncomment below to test apiSettingsIdPatch
            //val id : kotlin.String = id_example // kotlin.String | Settings identifier
            //val settingsSettingswrite : SettingsSettingswrite =  // SettingsSettingswrite | The updated Settings resource
            //val result : SettingsSettingsreadSettingsitemread = apiInstance.apiSettingsIdPatch(id, settingsSettingswrite)
            //result shouldBe ("TODO")
        }

        // to test apiSettingsPost
        should("test apiSettingsPost") {
            // uncomment below to test apiSettingsPost
            //val settingsSettingscreateSettingswrite : SettingsSettingscreateSettingswrite =  // SettingsSettingscreateSettingswrite | The new Settings resource
            //val result : SettingsSettingsreadSettingsitemread = apiInstance.apiSettingsPost(settingsSettingscreateSettingswrite)
            //result shouldBe ("TODO")
        }

    }
}
